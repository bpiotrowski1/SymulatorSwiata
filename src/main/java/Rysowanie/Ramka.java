package Rysowanie;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

import Swiat.Swiat;
import Swiat.Organizm;

/**
 *
 * @author Yellok
 */
public class Ramka extends javax.swing.JFrame implements KeyListener {

    private Swiat swiat;
    private int key;
    private final static int KOMUNIKATY_X = 5;
    /**
     * Creates new form Ramka
     * @param x
     * @param y
     */
    public Ramka(int x, int y) {
        addKeyListener(this);
        setFocusable(true);
        setFocusTraversalKeysEnabled(false);
        this.swiat = new Swiat(x, y);
        initComponents();
        mapa1.setSwiat(swiat);
        swiat.rozpocznij();
        jButton1.setFocusable(false);
        jTextArea2.setFocusable(false);
        jButton2.setFocusable(false);
        jButton3.setFocusable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mapa1 = new Rysowanie.Mapa();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout mapa1Layout = new javax.swing.GroupLayout(mapa1);
        mapa1.setLayout(mapa1Layout);
        mapa1Layout.setHorizontalGroup(
                mapa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 718, Short.MAX_VALUE)
        );
        mapa1Layout.setVerticalGroup(
                mapa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 401, Short.MAX_VALUE)
        );

        jButton1.setText("Nowa Gra");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(15);
        jTextArea1.setRows(5);
        jTextArea1.setText("CZARNY - Czlowiek\nNIEBIESKI - Antylopa\nPOMARAŃCZOWY - Lis\nBIAŁY - Owca\nSIWY - Wilk\nZIELONY - Owca\nCYJAN - Barszcz\nCZERWONY - Guarana\nZÓŁTY - Mlecz\nMAGENTA - Trawa\nRÓŻOWY - Wilcze jagody\n\n");
        jTextArea1.setAutoscrolls(false);
        jTextArea1.setBorder(null);
        jTextArea1.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setText("Zapisz");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Wczytaj");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                                        .addComponent(jScrollPane2))
                                                .addGap(18, 18, 18)
                                                .addComponent(mapa1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addContainerGap())
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton3)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mapa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton1)
                                        .addComponent(jButton2)
                                        .addComponent(jButton3))
                                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int x, y;
        String tmp;
        tmp = JOptionPane.showInputDialog("Podaj rozmiar X:");
        x = Integer.parseInt (tmp);
        tmp = JOptionPane.showInputDialog("Podaj rozmiar Y:");
        y = Integer.parseInt (tmp);
        swiat.odNowa(x, y);
        swiat.rozpocznij();
        mapa1.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            swiat.zapisz();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Ramka.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            swiat.odczytaj();
            repaint();
        } catch (IOException ex) {
            Logger.getLogger(Ramka.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ramka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        final int x, y;
        String tmp;
        tmp = JOptionPane.showInputDialog("Podaj rozmiar X:");
        x = Integer.parseInt (tmp);
        tmp = JOptionPane.showInputDialog("Podaj rozmiar Y:");
        y = Integer.parseInt (tmp);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ramka(x, y).setVisible(true);
            }
        });
    }

    @Override
    public void keyPressed(KeyEvent e) {
        key = e.getKeyCode();
        Organizm wskCzlowiek = swiat.getWskCzlowiek();
        switch (key) {
            case KeyEvent.VK_RIGHT:
                swiat.setCzlowiekRuch(0);
                swiat.wykonajTure();
                break;
            case KeyEvent.VK_LEFT:
                swiat.setCzlowiekRuch(2);
                swiat.wykonajTure();
                break;
            case KeyEvent.VK_UP:
                swiat.setCzlowiekRuch(3);
                swiat.wykonajTure();
                break;
            case KeyEvent.VK_DOWN:
                swiat.setCzlowiekRuch(1);
                swiat.wykonajTure();
                break;
            case KeyEvent.VK_SPACE:
                wskCzlowiek.niesmiertelnosc();
                break;
            case KeyEvent.VK_ESCAPE:
                setVisible(false);
                dispose();
                break;
            default:
                break;
        }
        repaint();
        wypiszKomunikaty();
    }

    private void wypiszKomunikaty() {
        jTextArea2.setText("");
        for (int i = 0; i < KOMUNIKATY_X; i++) {
            if ("1".equals(swiat.getKomunikat(0, i))) {
                jTextArea2.setText(jTextArea2.getText() + "\n" + swiat.getKomunikat(1, i) + " pokonal " + swiat.getKomunikat(2, i));
                swiat.setKomunikat("0", 0, i);
            }
            else if ("2".equals(swiat.getKomunikat(0, i))) {
                jTextArea2.setText(jTextArea2.getText() + "\n" + swiat.getKomunikat(1, i) + " urodzil sie");
                swiat.setKomunikat("0", 0, i);
            }
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {}
    @Override
    public void keyTyped(KeyEvent e) {}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private Rysowanie.Mapa mapa1;
    // End of variables declaration//GEN-END:variables
}
